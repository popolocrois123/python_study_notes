# プライベートメソッド
## クラスの中でしか呼び出せないメソッド「プライベートメソッド」
### やり方
1，クラス内のプライベートメソッドにしたいメソッド名の前に__を追加
2，呼び出し元のメソッドで呼び出したいプライベートメソッド名に__を追加
3，プライベートメソッドを呼び出す時も__を書く

```
# coding: utf-8
# アクセス制限を理解する

class Player:
    def __init__(self, job, weapon):
        self.job = job
        self.weapon = weapon

    def walk(self):
        print(self.job + "は荒野を歩いていた")
        # クラス内だけ呼び出せる
        self.__attack("スライム")

    def __attack(self, enemy):
        print(self.weapon + "で" + enemy + "を攻撃")


player1 = Player("戦士", "剣")
player1.walk()

# ここで呼び出してもエラーになる
# player1.__attack("スライム")
print(player1.weapon)

```

## クラスの中でしか呼び出せない変数「プライベート変数」
```
# coding: utf-8
# アクセス制限を理解する

class Player:
    def __init__(self, job, weapon):
        self.job = job

        # 変数の定義時に__を付ける
        self.__weapon = weapon

    def walk(self):
        print(self.job + "は荒野を歩いていた")
        self.__attack("スライム")

    def __attack(self, enemy):
        print(self.__weapon + "で" + enemy + "を攻撃")


player1 = Player("戦士", "剣")
player1.walk()
# player1.__attack("スライム")

# クラス外では呼び出せない
# print(player1.__weapon)

```

## 注意
プライベート関数や変数は特別な状態で呼び出すことができるので完全なプライベートではない
